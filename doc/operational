Date: 2012-07-20
Time-stamp: <2014-05-19>

* later								      :entry:
** 2012-08-26 use a error image in appendNotification()
** 2012-08-26 translate the usage.html to Chinese
   en_US/usage.html
   zh_CN/usage.html
** 2012-08-23 read more about namespace problem.
   - Is it only a problem in browser.xul and its overlays?
   - Can I call another add-on's javascript code in my add-on?
     Can I include an exported js module?
     Could js module run in browser.xul context (overlay)?

   - read:
     https://developer.mozilla.org/en-US/docs/XUL_School/JavaScript_Object_Management
** 2012-08-22 separate syntax check and interpreter. maybe.
   all things should be moved to nextpage.js, the config.js should only do
   syntax check.

   - generating bindings objected. including clear via the unbind-all
     command.
   - enable-debug
** 2012-08-22 if user edit config file in external editor and there are errors,
   how to alert user?

   - well, for now, just let them check it in Preferences window.
** 2012-08-22 add lisp parser.
   - Note taken on [2012-12-07 Fri 17:07] \\
     If I am to add a mini lisp, check the lisp kernel that Shen is based on. It is
     called KI.
     
     see http://www.shenlanguage.org/Documentation/shendoc.htm
*** support more commands and configurable vars.
    ignoreBindingAList
    nextPattern
*** more complicated one, it's a hook.
    var preGeneric = [
    [/\/((thread|forum)-|(viewthread|forumdisplay)\.php)/i, this.getLinkForDiscuz],
    [/^http:\/\/osdir\.com\/ml\//i, this.getLinkForOsdirML],
    [/^http:\/\/coding\.derkeiler\.com\/Archive\//i, this.getLinkForDerkeilerML],
    [/\.wikisource\.org\//i, this.getLinkForWikiSource],
    [/^http:\/\/www\.baidu\.com\/s\?wd=/i, this.getLinkForBaiduSearch]
    ];

    Well, the ultimate is just built a lisp API and interpreter for the
    firefox add-on. If I can write the preGeneric functions in lisp, then I
    can almost do anything.
*** support functions, variables
    the config file will be much more powerful when user can define functions.
    I just export all built-in firefox function to be usable in lisp config
    file, then user can create anything they want.

    I would also like to implement closures, so user can have states.

** 2012-08-22 support show-downloads command.
** 2012-08-22 support undo-close-tab command.
** 2012-08-18 file io need to get more detailed error message.
   I can't find any document for the XPCOM return value's text representation.

   In all example code, 

       Components.isSuccessCode(status)

   is used to tell whether a async call is successful, but when it is not, how
   to get an error message?

   - update config.js when I know how to do this.
** 2012-07-20 create a universal key binding add-on for firefox. :complicated:
   Why:

   The freedom to add or modify key bindings should be given to the user.
   Ideally developers just write functions (user commands) and recommend a
   default key binding. Users should be able bind/unbind whichever function as
   they wish.

   Firefox is pretty bad at this.
   That's why there is Firemacs, Vimperator, vimkeybindings, many gesture based
   add-ons, all creating their own way of doing things. There is no portability
   and code reuse.

   This universal key binding add-on aims to solve this problem by creating a
   framework that all add-on developers can use. Users will be able to bind
   arbitrary keys to built-in and external functions.

*** 2012-07-20 pre-condition
    - Make sure one add-on can call functions defined in another add-on.
      Firefox add-on namespace problem.

*** 2012-07-20 structure
    This add-on:
    - read key binding configuration, and check commands exists in the system.
      later key bindings overwrite earlier.
    - create key bindings on the fly.
    - be able to get command declaration files.
    - be able to get recommended (default) key bindings for some add-on.
    - be able to get key binding profile that user can create and share.
    - user can store their config file on the cloud. (add-on provide this
      service for free.) or on their profile dir or even their home dir.

      For example, firefox provide different default keybindings on Windows,
      Linux and Mac, those three can be made into profile. User can get
      universal key bindings if they wish.

** 2012-08-22 add unbind command.				      :maybe:
   which works just like bind something to nil.
   a pair of key nil will be added in the bindings obj. semantics are the same
   as (bind key nil).
** 2012-08-22 really write a sexp parser in js
   currently to support nil, I make the quote char optional in bind_pattern
   regexp.
** 2012-08-22 use platform convention for config file path.	      :maybe:
   on linux: ~/.config/nextpage.lisp
   on windows: My Document/nextpage.lisp
   on Mac: ?
** 2012-08-22 implement key-chains					:low:
   so I can bind C-c ! h etc. this is for future use beyond nextpage.

* current							      :entry:
** 2012-08-22 if preferences window is already open, just switch to it.
   do not start a new preferences window.

   User could be confused if they edit code in one window, and hit save button
   in another.

   I guess could do this in init function.

*** update usage.html nextpage_show_preferences function. maybe.
    never show two preferences window to user.
** 2012-08-19 make nextpage a restart-less add-on.
   It should be easy given that my program is quite organized, overlay on GUI
   is quite minimum.

   Bootstrapped extensions | Mozilla Developer Network
   https://developer.mozilla.org/en-US/docs/Extensions/Bootstrapped_extensions
   requires firefox 4.
** 2012-08-27 before releasing v1.3.6 to mozilla
   - update add-on description at mozilla
     will do it when v1.3.6 has passed review.
   - DONE create a screenshot and add it to add-on gallery.
   - DONE update project home page.
     move old document to a wiki page.
     Help135

     create new document and also use it in project description.
     Help136

** 2012-08-27 make it easier to open preferences window.
   - create menu item in Tools menu.
   - create a command that user can bind to open preferences window.
     nextpage-open-preferences
   - create a command that user can bind to reload nextpage config.
     nextpage-reload-config
